name: CI Laravel + Python

on:
  push:
    branches: [ "main", "staging", "feature/*" ]
  pull_request:
    branches: [ "main", "staging" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: ":memory:"
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      BROADCAST_DRIVER: log
      MAIL_MAILER: log

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, intl, pdo_sqlite, bcmath, zip, gd
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare environment
        run: |
          cp .env.example .env || true
          php artisan key:generate
          php artisan config:clear

      - name: Run migrations (SQLite)
        run: php artisan migrate --force || true

      - name: Run tests (Pest/PHPUnit)
        run: |
          if [ -f vendor/bin/pest ]; then vendor/bin/pest -vv;
          elif [ -f vendor/bin/phpunit ]; then vendor/bin/phpunit --colors=always;
          else echo "No hay tests de PHP"; fi

      - name: Build frontend (si existe)
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run build || npm run prod || echo "Build Vite no configurado"
          else
            echo "Sin frontend Node"
          fi

  python-tests:
    runs-on: ubuntu-latest
    needs: laravel-tests  # <-- ejecuta solo si el job anterior pasa
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pymod/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pymod/requirements.txt ]; then pip install -r pymod/requirements.txt; fi
          pip show pytest >/dev/null 2>&1 || pip install pytest

      - name: Run Python tests (pytest)
        run: pytest -v pymod/tests
